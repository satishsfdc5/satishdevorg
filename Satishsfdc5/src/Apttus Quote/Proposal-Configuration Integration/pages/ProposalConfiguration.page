<!-- 
    Apttus Proposal-Config Integration
    ProposalConfiguration
     
    @2010-2012 Apttus Inc. All rights reserved.
    
	parameters
    ==========
    Name			| Required | Description
    ================|==========|======================================================================================
    id 				| Yes      | The record id of the quote/proposal
                    |          |
    prodfilter_     | No       | Product search filter may be passed by prefixing the parameter name with 'prodfilter_'.
   					|		   | for e.g. if you pass in a parameter prodfilter_Family=XYZ001, the product family field in 
   					|		   | the Product object will be used to filter the product records. Multiple parameters
   					|		   | may be passed. 
                    |          |
    prodfilter_oper | No       | The boolean operator to combine multiple search filters. 
                    |          | Valid values are : AND, OR. The default value is AND. 
    				|		   |
    ===================================================================================================================
    
 -->
<apex:page standardController="Apttus_Proposal__Proposal__c" 
		   extensions="Apttus_QPConfig.ProposalConfigurationController" >
		   
	<apex:form >
		<!--  required fields -->
		<apex:outputText value="{!Apttus_Proposal__Proposal__c.Name}" rendered="false" />
		<apex:outputText value="{!Apttus_Proposal__Proposal__c.Apttus_Proposal__Proposal_Name__c}" rendered="false" />
		<apex:outputText value="{!Apttus_Proposal__Proposal__c.Apttus_Proposal__Account__c}" rendered="false" />
		<apex:outputText value="{!Apttus_Proposal__Proposal__c.Apttus_Proposal__ExpectedStartDate__c}" rendered="false" />
		<apex:outputText value="{!Apttus_Proposal__Proposal__c.Apttus_Proposal__ExpectedEndDate__c}" rendered="false" />
		<apex:outputText value="{!Apttus_Proposal__Proposal__c.Apttus_QPConfig__PriceListId__c}" rendered="false" />
		<apex:outputText value="{!Apttus_Proposal__Proposal__c.Apttus_QPConfig__PricingDate__c}" rendered="false" />
		
		<!--  hidden action buttons -->
		<apex:commandButton id="btnOnLoad" action="{!onLoad}" value="On Load" style="display: none" />
		
		<script>
        	var btnOnLoad = document.getElementById("{!$Component.btnOnLoad}");
      	</script>
      	
		<apex:pageBlock mode="edit" rendered="{!hasErrors}" >
			<apex:pageMessages />
			<apex:pageBlockButtons location="bottom" >
				<apex:commandButton action="{!doCancel}" value="{!$Label.apttus_qpconfig__Cancel}" immediate="true" />
			</apex:pageBlockButtons>
		</apex:pageBlock>
	</apex:form>
	
	<script>
		// register to invoke the function after the page load
		var hasErrors = "{!hasErrors}";
		if (hasErrors.toLowerCase() == 'false') {
		    window.onload = function() { 
		    	// on load
		        btnOnLoad.click();
		    };
		}
	</script>
	
</apex:page>