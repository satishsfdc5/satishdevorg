<!-- 
    Apttus Contract Management
    BrowseTemplates
     
    @2011-2013 Apttus Inc. All rights reserved.

 -->
<apex:page standardController="Apttus__APTS_Template__c" 
	  	   extensions="Apttus.BrowseTemplatesController,Apttus.RemoteActionController" 
           showHeader="false" 
           sidebar="false" 
           cache="false" 
           standardStylesheets="true"
           tabStyle="Apttus__SearchFilter__c">	
    
    <apex:includeScript value="{!URLFOR($Resource.Apttus__JQueryUILibrary19, 'js/jquery-1.8.3.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Apttus__JQueryUILibrary19, 'js/jquery-ui-1.9.2.custom.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.Apttus__JQueryUILibrary19, 'css/smoothness/jquery-ui-1.9.2.custom.css')}"/>
    
    <style>
		textarea2 {
			width: 25%;
		}
		
		.oddRow {
			background-color: #FFFFFF;
		}
		
		.evenRow {
			background-color: #EDF3FE;
		}
		
		.searchField {
		    float:left; 
		    width:300px; 
		    height:27px; 
		    line-height:27px;
		    text-indent:10px; 
		    font-family:arial, sans-serif; 
		    font-size:1em; 
		    color:#333; 
		    background: #fff; 
		    border:solid 1px #d9d9d9; 
		    border-top:solid 1px #c0c0c0; 
		    border-right:none;
		}
		
	</style>
	
	<script type="text/javascript">
    	
    	// This to make sure jQuery doesn't conflict with any other JS libraries
    	var j$ = jQuery.noConflict();
 		
 		j$(document).ready(function(){
			
			// setup namespace
			j$.APTTUS = {};
			
			// setup the text content dialog
			j$("#idTextContentPanel").dialog({
				autoOpen: false,
				draggable: false,
				modal: true,
				resizable: true,
				position: 'center'
				
			});
		 
		});
		
    	/**
		 * Callback after a partial page update
		 */
		function afterPageUpdate() {
			
			// delay to allow the page to be rendered	
           	setTimeout(function() {
           		
           		// callback the object
				try {
					window.external.PageRefreshed();
				} catch(ex) {
					// object not available
				}
          	}, 0);
           	
		}
		
		// function to handle the enter key
		function noenter(ev)  {
		   	if (window.event && (window.event.keyCode == 13 || ev.which == 13)) {
		   		doSearchTemplates();
		       	return false;
		       	
		     } else {
		          return true;
		          
		     }
		     
		}
		
		/**
	     * Gets the text content and display it in a modal dialog
	     * @param templateId the template id 
	     */
	    function getTextContent(templateId){
			document.getElementById('idTemplateName').innerHTML = "{!$Label.LoadingPage}";
		    document.getElementById('idTextContent').innerHTML = '';
		        
			Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.RemoteActionController.getTextContent}', templateId, function(result, event) {
			    // check response status
			    if (event.status) {
			        // ok response (check the result)
			        document.getElementById('idTemplateName').innerHTML = result.Name;
			        if (result && result.Apttus__TextContent__c) {
			        	document.getElementById('idTextContent').innerHTML = result.Apttus__TextContent__c;
			        	
					}
				} else {
			    	document.getElementById('idTextContent').innerHTML = event.message;
			    	
				}
				
	       	}, {escape:true});
			
			// show the modal panel
			showTextContent();
		
		}
		
		/**
		 * Show text content panel
		 */
		function showTextContent() {
			j$("#idTextContentPanel").dialog("open");
	      	j$("#idTextContentPanel").dialog({
	            height: 350,
	            width: 350,
	            modal: true
	        });
	        j$("#idTextContentPanel").dialog("option", "position", "center");
	        
	      	return false;
	      	
	   	}
	   	
	   	/**
		 * Hide the text content 
		 */
   		function hideTextContent() {
	    	// close the text content dialog
	      	j$("#idTextContentPanel").dialog("close");
	      
	   	}
	   	
		// register to invoke the function after the page load
    	window.onload = function() { 
    		// make the window visible
			try {
				window.external.MakeVisible();
			} catch(ex) {
				// object not available
			}
			
    	}
    
    </script>
    
    <apex:stylesheet value="{!$Resource.Apttus__ComplyStyles}" />
    
	<apex:form id="idBrowseTemplates">
		
		<apex:pageBlock id="idTemplateSearchBlock" title="{!PageTitle}" mode="detail">
			<apex:pageMessages />
			
			<apex:pageBlockButtons location="both">
		        <apex:commandButton value="{!$Label.apttus__Cancel}" 
		        					action="{!doCancel}" 
		        					immediate="true" 
		        					rendered="{!IsTestMode || NOT(IsPlaybookMode)}"
		        					reRender="idResultSetPanel" />
		        <apex:commandButton value="{!$Label.apttus__Return}" 
		        					action="{!doReturn}" 
		        					immediate="true" 
		        					rendered="{!IsTestMode}"/>
		    </apex:pageBlockButtons>
		    
		    <apex:outputText value="{!$Label.apttus__SearchTemplateInstruction}" /> <p/>
		    
		     <apex:outputPanel layout="block">
		    	<apex:inputText value="{!Apttus__APTS_Template__c.Name}" 
		    					styleClass="searchField" 
		    					onkeypress="return noenter(event);" />
		    	<apex:commandButton action="{!doSearchTemplates}" 
		    						reRender="idTemplateSearchBlock" 
		    						status="idSearchStatus" 
		    						style="line-height:0;font-size:0;text-indent:-999px;color: transparent;background-color:#4d90fe;background-image:url({!URLFOR($Resource.Apttus__GraphicsLib, 'small/search.png')});height:31px;width:70px;border-width:0px;background-repeat:no-repeat;background-position:center;border: 1px solid #3079ED;cursor:pointer;"/>
	
		    </apex:outputPanel>
			
			<apex:actionStatus id="idSearchStatus" startText="{!$Label.apttus__Searching}" onstop="afterPageUpdate()" />
			<br></br>
			<apex:commandLink action="{!doToggleSearchFilter}" 
						  	  reRender="idTemplateSearchBlock" 
						  	  value="{!SearchFilterToggleLabel}" 
						  	  style="color:#015BA7;font-size: 11px;" 
						  	  oncomplete="afterPageUpdate()" />
						  	  
			<apex:OutputPanel rendered="{!IsSearchFilterEnabled}" >
			    <apex:pageBlockSection columns="2">
				    <apex:inputField value="{!Apttus__APTS_Template__c.Apttus__Type__c}" required="false" />	
				    <apex:pageBlockSectionItem />
				   
				    <apex:inputField value="{!Apttus__APTS_Template__c.Apttus__Category__c}" required="false" />	
				    <apex:pageBlockSectionItem />
				    
				    <apex:inputField value="{!Apttus__APTS_Template__c.Apttus__Subcategory__c}" required="false" />	
				    <apex:pageBlockSectionItem />
				    
				    <apex:inputField value="{!Apttus__APTS_Template__c.Apttus__Locale__c}" required="false" />	
				    <apex:pageBlockSectionItem />
				    
				    <apex:inputField value="{!Apttus__APTS_Template__c.Apttus__Language__c}" required="false" />
				    <apex:pageBlockSectionItem />
				   
				</apex:pageBlockSection>
			</apex:OutputPanel>
		    
		    <apex:outputPanel id="idResultSetPanel">
			    <apex:outputPanel id="idResultStatsPanel" styleClass="bNext" layout="block" style="text-align: right;" rendered="{!hasTemplates}">
					<font size="1px">{!$Label.PageNbr}:&nbsp;<apex:outputLabel value="{!currentPageNumber}"/>&nbsp;{!$Label.OutOf}&nbsp;<apex:outputLabel value="{!totalPages}"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>
					<br></br>
					<apex:outputPanel id="idNavigationPanel" styleClass="next" layout="block" rendered="{!OR(hasNextPage,hasPreviousPage)}">
						<apex:outputPanel rendered="{!NOT(hasPreviousPage)}" styleClass="greyedLink">&lt;{!$Label.PreviousPage}</apex:outputPanel>
						<apex:commandLink rendered="{!hasPreviousPage}" action="{!previousPage}" reRender="idResultSetPanel">&lt;{!$Label.PreviousPage}</apex:commandLink>
						<span> | </span>
						<apex:outputPanel rendered="{!NOT(hasNextPage)}" styleClass="greyedLink">{!$Label.NextPage}&gt;</apex:outputPanel>
						<apex:commandLink rendered="{!hasNextPage}" action="{!nextPage}" reRender="idResultSetPanel">{!$Label.NextPage}&gt;</apex:commandLink>
					</apex:outputPanel>
				</apex:outputPanel>
				<apex:pageBlockSection columns="2" />
				<apex:outputPanel id="idRecordSetPanel" >
					<apex:pageBlockSection title="{!$Label.apttus__Templates}" columns="1" collapsible="false">
				        <apex:pageBlockTable value="{!templates}" 
				        					 var="versionInfo" 
				        					 rowClasses="oddRow,evenRow" 
				        					 width="100%" 
				        					 rendered="{!hasTemplates}" >
				        	<apex:column headerValue="{!$Label.apttus__Action}" >
				        		<apex:commandButton action="{!doSelectTemplate}" 
				        							value="{!$Label.apttus__Open}" 
				        							rendered="{!IsCheckoutMode}"
				        							reRender="idResultSetPanel" >
									<apex:param name="templateId" value="{!versionInfo.templateSO.Id}" />
									<apex:param name="action" value="Open" />
								</apex:commandButton>
								<apex:commandButton action="{!doSelectTemplate}" 
				        							value="{!$Label.apttus__Insert}" 
				        							rendered="{!IsPlaybookMode}"
				        							reRender="idResultSetPanel" >
									<apex:param name="templateId" value="{!versionInfo.templateSO.Id}" />
									<apex:param name="action" value="Insert" />
								</apex:commandButton>
								<apex:outputPanel rendered="{!IsTemplatePlaybookMode}" >
									<br></br>
									<apex:commandButton action="{!doSelectTemplate}" 
					        							value="{!$Label.apttus__InsertReference}" 
					        							reRender="idResultSetPanel" >
										<apex:param name="templateId" value="{!versionInfo.templateSO.Id}" />
										<apex:param name="action" value="Insert Reference" />
									</apex:commandButton>
								</apex:outputPanel>
							</apex:column>
							
							<apex:column headerValue="{!$ObjectType.Apttus__APTS_Template__c.Fields.Name.Label}" >
								<apex:commandLink value="{!versionInfo.templateSO.Name}" 
												  title="{!$Label.apttus__TextContentViewInstruction}"
												  onclick="getTextContent('{!versionInfo.templateSO.Id}');"
												  rerender="dummy" />
							</apex:column>
											
							<!--  Browse Templates Result Field Set  -->
							<apex:repeat value="{!ResultFields}" 
										 var="fd">
								<apex:column value="{!versionInfo.templateSO[fd.member.FieldPath]}" >
									<apex:facet name="header">
										<apex:outputPanel > 
							        		<apex:commandLink value="{!fd.member.Label}" 
							        						  action="{!doSortTemplates}" 
							        						  rendered="{!fd.isSortable}"
							        						  reRender="idResultSetPanel">        
			                        			<apex:param name="sortFieldName" value="{!fd.member.FieldPath}" />	
			                        			<apex:image url="{!URLFOR($Resource.Apttus__GraphicsLib, 'small/sort_asc_arrow.gif')}" 
			                        						title="{!$Label.apttus__SortedAscending}" 
			                        						alt="{!$Label.apttus__SortedAscending}" 
			                        						rendered="{!sortFieldName == fd.member.FieldPath && sortOrder != 'DESC'}" />                     						
			                        			<apex:image url="{!URLFOR($Resource.Apttus__GraphicsLib, 'small/sort_desc_arrow.gif')}"  
			                        						title="{!$Label.apttus__SortedDescending}" 
			                        						alt="{!$Label.apttus__SortedDescending}" 
			                        						rendered="{!sortFieldName == fd.member.FieldPath && sortOrder == 'DESC'}" />
			                        		</apex:commandLink>
			                        		<apex:outputText value="{!fd.member.Label}" 
			                        						 rendered="{!NOT(fd.isSortable)}" />			 
		                        		</apex:outputPanel>
			        				</apex:facet>
			        		
								</apex:column>
							</apex:repeat>	   
							
				        </apex:pageBlockTable>
				        <apex:outputText value="{!$Label.apttus__NoRecordsToDisplay}" rendered="{!NOT(hasTemplates)}" />
				    </apex:pageBlockSection>
				</apex:outputPanel>
				
				<apex:outputPanel id="idResultStatsPanel2" styleClass="bNext" layout="block" style="text-align: right;" rendered="{!hasTemplates}">
					<font size="1px">{!$Label.PageNbr}:&nbsp;<apex:outputLabel value="{!currentPageNumber}"/>&nbsp;{!$Label.OutOf}&nbsp;<apex:outputLabel value="{!totalPages}"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>
					<br></br>
					<apex:outputPanel id="idNavigationPanel2" styleClass="next" layout="block" rendered="{!OR(hasNextPage,hasPreviousPage)}">
						<apex:outputPanel rendered="{!NOT(hasPreviousPage)}" styleClass="greyedLink">&lt;{!$Label.PreviousPage}</apex:outputPanel>
						<apex:commandLink rendered="{!hasPreviousPage}" action="{!previousPage}" reRender="idResultSetPanel">&lt;{!$Label.PreviousPage}</apex:commandLink>
						<span> | </span>
						<apex:outputPanel rendered="{!NOT(hasNextPage)}" styleClass="greyedLink">{!$Label.NextPage}&gt;</apex:outputPanel>
						<apex:commandLink rendered="{!hasNextPage}" action="{!nextPage}" reRender="idResultSetPanel">{!$Label.NextPage}&gt;</apex:commandLink>
					</apex:outputPanel>
				</apex:outputPanel>
				
		        <apex:outputPanel id="idResponsePanel" 
		        				  rendered="{!NOT(hasErrors) && (hasResponseXml)}" >
					<script>
						
						try {
							
							// get the response xml
							var responseXml = "{!JSENCODE(responseXml)}";
							//alert(responseXml);
							
							// set the response xml
							window.external.SetResponse(responseXml);
							
						} catch(ex) {
							// object not available
						} 
						
					</script>
				</apex:outputPanel>
			</apex:outputPanel>
		</apex:pageBlock>
		
		<!-- text content dialog -->
		<apex:outputPanel >
			<div id="idTextContentPanel" style="display: none">
				<apex:outputPanel >
				    <div class="hd">
				    	<apex:outputPanel >
				    		<span id="idTemplateName">Hello Name</span>
				        </apex:outputPanel>	
				    </div> 
				    <div class="bd">
			    		<apex:pageBlock >
			    			<apex:pageBlockSection columns="1">
			    				<apex:pageBlockSectionItem >
			    					<span id="idTextContent">Hello Text</span>
				    			</apex:pageBlockSectionItem>
			    			</apex:pageBlockSection>
			    		</apex:pageBlock>
				    </div> 
				</apex:outputPanel>	
			</div>
		</apex:outputPanel>					
		
		<apex:actionFunction name="doSearchTemplates" 
							 action="{!doSearchTemplates}" 
							 reRender="idTemplateSearchBlock" 
		    				 status="idSearchStatus" />
		    				 
	</apex:form>

</apex:page>