<!-- 
    Apttus Contract Management
    BrowseAgreements
     
    @2012-2013 Apttus Inc. All rights reserved.

 -->
<apex:page standardController="Apttus__SearchFilter__c" 
	  	   extensions="Apttus.BrowseAgreementsController" 
           showHeader="false" 
           sidebar="false" 
           cache="false"
           standardStylesheets="true"
           tabStyle="Apttus__SearchFilter__c">	
     
    <style>
		textarea {
			width: 35%;
		}
		
		.errorRow {
			border: 1px solid red;
		}
		
		.oddRow {
			background-color: #FFFFFF;
		}
		
		.evenRow {
			background-color: #EDF3FE;
		}
		
		.searchContainer {
		    margin:0px;
		}
 
		.searchField {
		    float:left; 
		    width:300px; 
		    height:27px; 
		    line-height:27px;
		    text-indent:10px; 
		    font-family:arial, sans-serif; 
		    font-size:1em; 
		    color:#333; 
		    background: #fff; 
		    border:solid 1px #d9d9d9; 
		    border-top:solid 1px #c0c0c0; 
		    border-right:none;
		}
 
		.searchButton {
		    cursor:pointer; 
		    width:70px; 
		    height: 31px; 
		    line-height:0; 
		    font-size:0; 
		    text-indent:-999px;
		    color: transparent;  
		    background-color:#4d90fe;
		    background-repeat:no-repeat;
		    background-position:center;
		    border: 1px solid #3079ED; 
		    -moz-border-radius: 2px; 
		    -webkit-border-radius: 2px; 
		}
		
		.searchButton:hover {
			background-color:#357AE8;
		    background-repeat:no-repeat;
		    background-position:center;
		    border: 1px solid #2F5BB7;
		}
		
	</style>
	
	<script type="text/javascript">
    	
    	/**
		 * Callback after a partial page update
		 */
		function afterPageUpdate() {
			
			// delay to allow the page to be rendered	
           	setTimeout(function() {
           		
           		// callback the object
				try {
					window.external.PageRefreshed();
				} catch(ex) {
					// object not available
				}
          	}, 0);
           	
		}
		
		// function to handle the enter key
		function noenter(ev)  {
		   	if (window.event && (window.event.keyCode == 13 || ev.which == 13)) {
		   		doSearchSObjects();
		       	return false;
		       	
		     } else {
		          return true;
		          
		     }
		     
		}
		
		// register to invoke the function after the page load
    	window.onload = function() { 
    		// make the window visible
			try {
				window.external.MakeVisible();
			} catch(ex) {
				// object not available
			}
			
    	}
    
    </script>
    
	<apex:form id="idBrowseSObjects">
		
		<apex:pageBlock id="idSObjectSearchBlock" title="{!PageTitle}" mode="detail">
			<apex:pageMessages />
			
			<apex:pageBlockButtons location="both">
		        <apex:commandButton value="{!$Label.apttus__Cancel}" 
		        					action="{!doCancel}" 
		        					immediate="true" 
		        					reRender="idOutputPanel" />
		        <apex:commandButton value="{!$Label.apttus__Return}" 
		        					action="{!doReturn}" 
		        					immediate="true" 
		        					rendered="{!IsTestMode}"/>
		    </apex:pageBlockButtons>
		    
		    <apex:outputText value="{!$Label.apttus__SearchAgreementInstruction}" /> <p/>
		    
		     <apex:outputPanel layout="block">
		    	<apex:inputText value="{!Apttus__SearchFilter__c.Name}" 
		    					styleClass="searchField" 
		    					onkeypress="return noenter(event);" />
		    	<apex:commandButton action="{!doSearchSObjects}" 
		    						reRender="idSObjectSearchBlock" 
		    						status="idSearchStatus" 
		    						style="line-height:0;font-size:0;text-indent:-999px;color: transparent;background-color:#4d90fe;background-image:url({!URLFOR($Resource.Apttus__GraphicsLib, 'small/search.png')});height:31px;width:70px;border-width:0px;background-repeat:no-repeat;background-position:center;border: 1px solid #3079ED;cursor:pointer;"/>
	
		    </apex:outputPanel>
		    
		    <apex:actionStatus id="idSearchStatus" startText="{!$Label.apttus__Searching}" onstop="afterPageUpdate()" />
		    
		    <apex:outputPanel id="idOutputPanel">
			    <apex:outputPanel id="idResultSetPanel" rendered="{!NOT(IsSObjectSelected)}" >
				    <apex:outputPanel id="idResultStatsPanel" styleClass="bNext" layout="block" style="text-align: right;" rendered="{!HasSObjects}">
						<font size="1px">{!$Label.PageNbr}:&nbsp;<apex:outputLabel value="{!currentPageNumber}"/>&nbsp;{!$Label.OutOf}&nbsp;<apex:outputLabel value="{!totalPages}"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>
						<br></br>
						<apex:outputPanel id="idNavigationPanel" styleClass="next" layout="block" rendered="{!OR(hasNextPage,hasPreviousPage)}">
							<apex:outputPanel rendered="{!NOT(hasPreviousPage)}" styleClass="greyedLink">&lt;{!$Label.PreviousPage}</apex:outputPanel>
							<apex:commandLink rendered="{!hasPreviousPage}" action="{!previousPage}" reRender="idResultSetPanel">&lt;{!$Label.PreviousPage}</apex:commandLink>
							<span> | </span>
							<apex:outputPanel rendered="{!NOT(hasNextPage)}" styleClass="greyedLink">{!$Label.NextPage}&gt;</apex:outputPanel>
							<apex:commandLink rendered="{!hasNextPage}" action="{!nextPage}" reRender="idResultSetPanel">{!$Label.NextPage}&gt;</apex:commandLink>
						</apex:outputPanel>
					</apex:outputPanel>
					<apex:pageBlockSection columns="2" />
					<apex:outputPanel id="idRecordSetPanel" >
						<apex:pageBlockSection title="{!$Label.apttus__Agreements}" columns="1" collapsible="false">
					        <apex:pageBlockTable value="{!SObjects}" 
					        					 var="sObjectInfo" 
					        					 rowClasses="oddRow,evenRow" 
					        					 width="100%" 
					        					 rendered="{!HasSObjects}" >
					        	<apex:column headerValue="{!$Label.apttus__Action}" >
					        		
									<apex:commandButton action="{!doSelectSObject}" 
					        							value="{!$Label.apttus__Select}" 
					        							rendered="{!(isCheckoutMode && ((IsAttachmentDocType && sObjectInfo.hasAttachments) || NOT(IsAttachmentDocType)))}"
					        							reRender="idOutputPanel" >
										<apex:param name="sObjectId" value="{!sObjectInfo.sObjectSO.Id}" />
										<apex:param name="action" value="Select" />
									</apex:commandButton>
									<apex:commandButton action="{!doSelectSObject}" 
					        							value="{!$Label.apttus__Select}" 
					        							rendered="{!isCheckinMode || IsUploadMode}"
					        							reRender="idOutputPanel" >
										<apex:param name="sObjectId" value="{!sObjectInfo.sObjectSO.Id}" />
										<apex:param name="action" value="Select" />
									</apex:commandButton>
								</apex:column>
								
								<apex:column width="20px" >
									<apex:image value="{!URLFOR($Resource.Apttus__GraphicsLib, 'small/lock.png')}" 
												alt="{!$Label.apttus__ReadOnly}"
												title="{!$Label.apttus__ReadOnly}"
												rendered="{!sObjectInfo.isReadOnly}" />
								</apex:column>
								
								<!--  Browse Agreements Result Field Set  -->
								<apex:repeat value="{!ResultFields}" 
											 var="fd">
									<apex:column value="{!sObjectInfo.sObjectSO[fd.member.FieldPath]}" >
										<apex:facet name="header">
											<apex:outputPanel > 
								        		<apex:commandLink value="{!fd.member.Label}" 
								        						  action="{!doSortSObjects}" 
								        						  rendered="{!fd.isSortable}"
								        						  reRender="idResultSetPanel">        
				                        			<apex:param name="sortFieldName" value="{!fd.member.FieldPath}" />	
				                        			<apex:image url="{!URLFOR($Resource.Apttus__GraphicsLib, 'small/sort_asc_arrow.gif')}" 
				                        						title="{!$Label.apttus__SortedAscending}" 
				                        						alt="{!$Label.apttus__SortedAscending}" 
				                        						rendered="{!sortFieldName == fd.member.FieldPath && sortOrder != 'DESC'}" />                     						
				                        			<apex:image url="{!URLFOR($Resource.Apttus__GraphicsLib, 'small/sort_desc_arrow.gif')}"  
				                        						title="{!$Label.apttus__SortedDescending}" 
				                        						alt="{!$Label.apttus__SortedDescending}" 
				                        						rendered="{!sortFieldName == fd.member.FieldPath && sortOrder == 'DESC'}" />
				                        		</apex:commandLink>
				                        		<apex:outputText value="{!fd.member.Label}" 
				                        						 rendered="{!NOT(fd.isSortable)}" />			 
			                        		</apex:outputPanel>
				        				</apex:facet>
				        		
									</apex:column>
								</apex:repeat>	   
				
					        </apex:pageBlockTable>
					        <apex:outputText value="{!$Label.apttus__NoRecordsToDisplay}" 
					        				 rendered="{!NOT(HasSObjects)}" />
					    </apex:pageBlockSection>
					</apex:outputPanel>
					
					<apex:outputPanel id="idResultStatsPanel2" styleClass="bNext" layout="block" style="text-align: right;" rendered="{!HasSObjects}">
						<font size="1px">{!$Label.PageNbr}:&nbsp;<apex:outputLabel value="{!currentPageNumber}"/>&nbsp;{!$Label.OutOf}&nbsp;<apex:outputLabel value="{!totalPages}"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>
						<br></br>
						<apex:outputPanel id="idNavigationPanel2" styleClass="next" layout="block" rendered="{!OR(hasNextPage,hasPreviousPage)}">
							<apex:outputPanel rendered="{!NOT(hasPreviousPage)}" styleClass="greyedLink">&lt;{!$Label.PreviousPage}</apex:outputPanel>
							<apex:commandLink rendered="{!hasPreviousPage}" action="{!previousPage}" reRender="idResultSetPanel">&lt;{!$Label.PreviousPage}</apex:commandLink>
							<span> | </span>
							<apex:outputPanel rendered="{!NOT(hasNextPage)}" styleClass="greyedLink">{!$Label.NextPage}&gt;</apex:outputPanel>
							<apex:commandLink rendered="{!hasNextPage}" action="{!nextPage}" reRender="idResultSetPanel">{!$Label.NextPage}&gt;</apex:commandLink>
						</apex:outputPanel>
					</apex:outputPanel>
					
				</apex:outputPanel>
				
				<apex:outputPanel id="idDocumentSetPanel" 
								  rendered="{!isCheckoutMode && IsSObjectSelected}" >
					
					<apex:pageBlockSection title="{!IF(IsAttachmentDocType, $Label.apttus__Attachments, $Label.apttus__Files) & ' ' & $Label.apttus__For & ' ' & SelectedSObject.name}" 
										   columns="1" 
										   collapsible="true">
				        
				        <apex:outputPanel rendered="{!HasSObjectDocs}"  >
				        	 <apex:outputText value="{!$Label.apttus__SelectFileInstruction2}" /> 
				        	 <br></br>
				        </apex:outputPanel>
				       
				        <apex:commandLink value="{!$Label.apttus__Back}" 
		        						  action="{!doBack}" 
		        						  immediate="true" 
		        						  style="color:blue;"
		        						  reRender="idOutputPanel" />			
		        								
				        <apex:pageBlockTable value="{!SObjectDocs}" 
				        					 var="sObjectDocInfo" 
				        					 rowClasses="oddRow,evenRow" 
				        					 width="100%" 
				        					 rendered="{!HasSObjectDocs}" >
				        	<apex:column headerValue="{!$Label.apttus__Action}" >
				        		
				        		<apex:commandButton action="{!doSelectSObjectDoc}" 
				        							value="{!$Label.apttus__Open}" 
				        							rendered="{!sObjectDocInfo.isReadOnly}"
				        							reRender="idOutputPanel" >
									<apex:param name="docId" value="{!sObjectDocInfo.docId}" />
									<apex:param name="action" value="View" />
								</apex:commandButton>
								
								<apex:commandButton action="{!doSelectSObjectDoc}" 
				        							value="{!$Label.apttus__Open}" 
				        							rendered="{!NOT(sObjectDocInfo.isReadOnly)}"
				        							reRender="idOutputPanel" >
									<apex:param name="docId" value="{!sObjectDocInfo.docId}" />
									<apex:param name="action" value="Open" />
								</apex:commandButton>
								
							</apex:column>
							
							<apex:column width="20px" >
								<apex:image value="{!URLFOR($Resource.Apttus__GraphicsLib, 'small/lock.png')}" 
											alt="{!$Label.apttus__ReadOnly}"
											title="{!$Label.apttus__ReadOnly}"
											rendered="{!sObjectDocInfo.isReadOnly}" />
							</apex:column>
							
							<apex:column headerValue="{!IF(IsAttachmentDocType, $ObjectType.Attachment.Fields.Name.Label, $ObjectType.ContentDocument.Fields.Title.Label)}" 
										 value="{!sObjectDocInfo.docName}" >
							</apex:column>
							
							<apex:column headerValue="{!$Label.apttus__Permissions}"
										 value="{!sObjectDocInfo.sharePermissions}" >
							</apex:column>
							
							<apex:column headerValue="{!$Label.apttus__Owner}" 
										 value="{!sObjectDocInfo.ownerName}" >
							</apex:column>
							
							<apex:column headerValue="{!$ObjectType.Apttus__SearchFilter__c.Fields.LastModifiedDate.Label}" >
								<apex:outputField value="{!sObjectDocInfo.lastModifiedDate.Apttus__Datetime__c}" />
							</apex:column>
							
				        </apex:pageBlockTable>
				        <apex:outputText value="{!IF(IsAttachmentDocType, $Label.apttus__NoAttachmentsToDisplay, $Label.apttus__NoFilesToDisplay)}" 
				        				 rendered="{!NOT(HasSObjectDocs)}" />
				    </apex:pageBlockSection>
				
				</apex:outputPanel>
				
				<apex:outputPanel id="idResponsePanel" 
			        				  rendered="{!NOT(hasErrors) && (hasResponseXml)}" >
					<script>
						
						try {
							
							// get the response xml
							var responseXml = "{!JSENCODE(responseXml)}";
							//alert(responseXml);
							
							// set the response xml
							window.external.SetResponse(responseXml);
							
						} catch(ex) {
							// object not available
						} 
						
					</script>
				</apex:outputPanel>
					
			</apex:outputPanel>
		</apex:pageBlock>
		
		<apex:actionFunction name="doSearchSObjects" 
							 action="{!doSearchSObjects}" 
							 reRender="idSObjectSearchBlock" 
		    				 status="idSearchStatus" />
		    				 
	</apex:form>

</apex:page>