<!-- 
    Apttus Contract Management
    PublishChatter
     
    @2010-2011 Apttus Inc. All rights reserved.

 -->
 <apex:page standardController="Apttus__APTS_Agreement__c" 
		    extensions="Apttus.QueryParamController"  
		    showHeader="true" 
		    sidebar="true" >
	
	<apex:includeScript value="/soap/ajax/26.0/connection.js" />
	<apex:includeScript value="/soap/ajax/26.0/apex.js" />
	<apex:include pageName="Apttus__ComplyJSLibInclude" />
	
	<apex:stylesheet value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/assets/skins/sam/skin.css')}" />
 
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/yahoo-dom-event/yahoo-dom-event.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/dragdrop/dragdrop-min.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/container/container-min.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/animation/animation-min.js')}" />
	
	<script>
    
	    // Create a namespace for our custom functions
	    YAHOO.namespace("force.com");
		
		// wait panel
		
		/**
		 * Builds the wait panel.
		 */
	    YAHOO.force.com.buildWaitPanel = function() {
	        document.body.className = document.body.className + " yui-skin-sam";
	        YAHOO.force.com.waitPanel = new YAHOO.widget.Panel(
	            "waitPanel",  // The id of our dialog container
	            { 
	                    width           :   "300px", // You can play with this until it's right
	                    visible         :   false,   // Should be invisible when rendered
	                    draggable       :   false,   // Make the dialog draggable
	                    close           :   false,   // Don't include a close title button
	                    modal           :   true,    // Make it modal
	                    fixedCenter     :   true,    // Keep centered if window is scrolled
	                    zindex          :   40,      // Make sure it's on top of everything
	                    constraintoviewport: true,
	                    
	                    // This line adds the appear/disapper fade effect
	                    effect			:   {effect:YAHOO.widget.ContainerEffect.FADE,duration:0.25}
        							
	            }
	        );
	        
	        // header
	        YAHOO.force.com.waitPanel.setHeader("{!$Label.ActivatingAgreement}");
			// set image
			YAHOO.force.com.waitPanel.setBody('<center><img src="{!URLFOR($Resource.Image_LoadingPage)}" /></center>');
	        // Render the dialog to the document.body level of the DOM
	        YAHOO.force.com.waitPanel.render(document.body);
	        
	    }
	    
	    // Function called when the DOM is ready to create the dialog,
    	// render the dialog into the document body, add our dialog skin
    	// css to the body tag, and wire up the buttons on our dialog   
		YAHOO.force.com.onDOMReady = function() {
			
			// build the wait panel
			YAHOO.force.com.buildWaitPanel();
			// show modal panel
			YAHOO.force.com.waitPanel.show();
			// post activate
			// delay to display progress message	
           	setTimeout(function() {
           		// post save
         		afterActivate();
          	}, 2000);
	        
		}
		
	    // build the tree as soon as the DOM is in a usable state
		YAHOO.util.Event.onDOMReady(YAHOO.force.com.onDOMReady);   	
		
	</script>
	
	<script type="text/javascript">
    	
	   	/**
		 * Initializes the call
		 */
		function initCall() {
		
			try {
				sforce.connection.sessionId = "{!$Api.Session_ID}"; //to avoid session timeout
			} catch(e) {
				erroralert(cERROR_UNKNOWN,e);
				
			}
		
		}
		
		/**
		 * Callback invoked after an agreement is activated
		 */
		function afterActivate() {
			
			// perform the post activation process
         	// get the agreement id
			var agreementId = "{!Id}";
				
			try {
				
				// STEP I - initialize the call
				initCall();
		
				// STEP II - Create chatter feeds
				// get the comma separated list of searchable document ids
				var docIdStr = "{!JSENCODE(DocumentIdsCsv)}";
				if (docIdStr != null && docIdStr.length > 0) {
					var docIds = docIdStr.split(",");
					for (var i = 0; i < docIds.length; i++) {
						// create the chatter feed
						createChatterFeedForAgreement(agreementId, docIds[i]);
						
					}
					
					// STEP III - delete searchable attachments
					deleteAttachments(docIds);
					
				}
			
			} catch(ex) {
				// hide modal panel
				YAHOO.force.com.waitPanel.hide();
				// display the error
				erroralert(cERROR_UNKNOWN, ex);
				
			} finally {
				// back to the detail page
				navigateTo("/" + agreementId);
				
			}
			
		}
		
	</script>
	
</apex:page>