<!-- 
    Apttus Contract Management
    SendToOtherPartyPostProcess
     
    @2009-2011 Apttus Inc. All rights reserved.

 -->
<apex:page standardController="Apttus__APTS_Agreement__c" 
		   extensions="Apttus.SendToOtherPartyPostProcessController" >

	<apex:stylesheet value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/assets/skins/sam/skin.css')}" />
 
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/yahoo-dom-event/yahoo-dom-event.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/dragdrop/dragdrop-min.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/container/container-min.js')}" />
	<apex:includescript value="{!URLFOR($Resource.Apttus__YUILibrary, '/yui/build/animation/animation-min.js')}" />
	
	<script type="text/javascript" src="/soap/ajax/26.0/connection.js"></script>
	<script type="text/javascript" src="/soap/ajax/26.0/apex.js"></script>
	<apex:include pageName="Apttus__ComplyJSLibInclude" />
	
	<script>
		// unknown error
		var cACTION_SEND_FOR_REVIEW = "Send_To_Other_Party_For_Review";
		var cACTION_SEND_FOR_SIGNATURES = "Send_To_Other_Party_For_Signatures";
		
		var cERROR_UNKNOWN_ACTION = "{!$Label.ErrorUnknownAction}";
		
		var showConfirmation = "{!showConfirmation}";
		var agreementId =  "{!JSENCODE(agreementId)}";
		var templateId =  "{!JSENCODE(templateId)}";
		var userAction = "{!JSENCODE(userAction)}"; 
		
	    // Create a namespace for our custom functions
	    YAHOO.namespace("force.com");
	
	    // Function called when we want to show the dialog
	    YAHOO.force.com.showMe = function() {
	        document.getElementById("confirmationPanel").style.display = "block";
	        YAHOO.force.com.myDialog.show();
	        
	    }
	   
	   // Function called when we want to hide the dialog
	    YAHOO.force.com.hideMe = function() {
	        YAHOO.force.com.myDialog.hide();
	        
	    }

	    // Function called when the DOM is ready to create the dialog,
	    // render the dialog into the document body, add our dialog skin
	    // css to the body tag, and wire up the buttons on our dialog    
	    YAHOO.force.com.init = function() {
	        document.body.className = document.body.className + " yui-skin-sam";
	        YAHOO.force.com.myDialog = new YAHOO.widget.Panel(
	            "confirmationPanel",  // The id of our dialog container
	            { 
	                    width           :   "300px", // You can play with this until it's right
	                    visible         :   false,   // Should be invisible when rendered
	                    draggable       :   true,    // Make the dialog draggable
	                    close           :   false,   // Don't include a close title button
	                    modal           :   true,    // Make it modal
	                    fixedCenter     :   true,    // Keep centered if window is scrolled
	                    zindex          :   40,      // Make sure it's on top of everything
	                    
	                    // This line adds the appear/disapper fade effect
	                    effect          :   {effect:YAHOO.widget.ContainerEffect.FADE,duration:0.35} 
	            }
	         );
	        
	        // Render the dialog to the document.body level of the DOM
	        YAHOO.force.com.myDialog.render(document.body);
	        // display the dialog
	        YAHOO.force.com.showMe();
	        
	    }
	    
		if (showConfirmation.valueOf() == 'true') {  
		    // Add the init method to the window.load event
		    YAHOO.util.Event.addListener(window, "load", YAHOO.force.com.init);
		    
	    } else {
	    	doPostProcess();
	    	
	    }
	    
	   	/**
		 * Initializes the call
		 */
		function initCall() {
		
			try {
				sforce.connection.sessionId = "{!$Api.Session_ID}"; //to avoid session timeout
			} catch(e) {
				erroralert(cERROR_UNKNOWN,e);
				
			}
			
		}
		
		/**
		 * Callback invoked after send email action to perform status change and log activity
		 * @param agreementId the id of the agreement object 
		 * @param action initiated by user send to other party for preview/signatures
		 * @return <code>true</code> if the callback was successful, <code>false</code> otherwise
		 */
		function doPostProcess() {			
		
			try {
				initCall();
				
				// STEP I - delete the temporary email template
				deleteEmailTemplate(templateId);
				
				// STEP II - write activity history based on action
            	if (cACTION_SEND_FOR_REVIEW == userAction) {
					//showMsgProgress(cAFTER_SENT_FOR_REVIEW);
            		afterSentForReview(agreementId);
            	
            	} else if (cACTION_SEND_FOR_SIGNATURES == userAction) {
					//showMsgProgress(cAFTER_SENT_FOR_SIGNATURES);
            		afterSentForSignatures(agreementId);
            	
            	} else {
            		throw(cERROR_UNKNOWN_ACTION + " " + userAction);
            	}
            	
			} catch(ex) {
				erroralert(cERROR_UNKNOWN,ex);
				
			} finally {
				// return to agreement in view mode
				navigateTo("/" + agreementId);
				
			}
			
		}
		
	</script>
	
	<!-- This is the content of the modal dialog -->
	<div id="confirmationPanel" style="display: none" >
	    <div class="hd">
	        <apex:outputText value="{!$Label.apttus__EmailConfirmation}" />
	    </div> 
	    <div class="bd">
		    <apex:outputPanel >
		    	<b>{!$Label.apttus__EmailConfirmationInstruction}</b>
		    </apex:outputPanel>
	    </div> 
	    <div class="bd">
	        <apex:form >
	            <apex:actionRegion >
	                <div style="text-align: center;" >
	                    <apex:commandButton value="{!$Label.apttus__Yes}" 
	                    					onclick="doPostProcess();" 
	                    					oncomplete="YAHOO.force.com.hideMe();" />
	                    <apex:commandButton value="{!$Label.apttus__No}" 
	                    					action="{!doCancel}" 
	                    					immediate="true" 
	                    					oncomplete="YAHOO.force.com.hideMe();" />
	                </div>
	            </apex:actionRegion>
	        </apex:form>
	    </div>
	</div>

</apex:page>